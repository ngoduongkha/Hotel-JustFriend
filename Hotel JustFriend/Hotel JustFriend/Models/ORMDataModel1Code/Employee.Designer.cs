//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
namespace Hotel_JustFriend.Models.Hotel_JustFriend
{

    public partial class Employee : XPLiteObject
    {
        int fIdEmployee;
        [Key]
        [Persistent(@"idEmployee")]
        public int IdEmployee
        {
            get { return fIdEmployee; }
            set { SetPropertyValue<int>(nameof(IdEmployee), ref fIdEmployee, value); }
        }
        EmployeeRole fIdEmployeeRole;
        [Persistent(@"idEmployeeRole")]
        [Association(@"EmployeeReferencesEmployeeRole")]
        public EmployeeRole IdEmployeeRole
        {
            get { return fIdEmployeeRole; }
            set { SetPropertyValue<EmployeeRole>(nameof(IdEmployeeRole), ref fIdEmployeeRole, value); }
        }
        AccountRole fIdAccountRole;
        [Persistent(@"idAccountRole")]
        [Association(@"EmployeeReferencesAccountRole")]
        public AccountRole IdAccountRole
        {
            get { return fIdAccountRole; }
            set { SetPropertyValue<AccountRole>(nameof(IdAccountRole), ref fIdAccountRole, value); }
        }
        string fFullName;
        [Size(SizeAttribute.Unlimited)]
        [Persistent(@"fullName")]
        public string FullName
        {
            get { return fFullName; }
            set { SetPropertyValue<string>(nameof(FullName), ref fFullName, value); }
        }
        string fGender;
        [Size(20)]
        [Persistent(@"gender")]
        public string Gender
        {
            get { return fGender; }
            set { SetPropertyValue<string>(nameof(Gender), ref fGender, value); }
        }
        string fPhone;
        [Indexed(Name = @"UQ__Employee__B43B145F0B191AD6", Unique = true)]
        [Size(20)]
        [Persistent(@"phone")]
        public string Phone
        {
            get { return fPhone; }
            set { SetPropertyValue<string>(nameof(Phone), ref fPhone, value); }
        }
        string fAddress;
        [Size(SizeAttribute.Unlimited)]
        [Persistent(@"address")]
        [ColumnDbDefaultValue("('Not provided')")]
        public string Address
        {
            get { return fAddress; }
            set { SetPropertyValue<string>(nameof(Address), ref fAddress, value); }
        }
        DateTime fDateOfBirth;
        [Persistent(@"dateOfBirth")]
        public DateTime DateOfBirth
        {
            get { return fDateOfBirth; }
            set { SetPropertyValue<DateTime>(nameof(DateOfBirth), ref fDateOfBirth, value); }
        }
        DateTime fStartDate;
        [Persistent(@"startDate")]
        public DateTime StartDate
        {
            get { return fStartDate; }
            set { SetPropertyValue<DateTime>(nameof(StartDate), ref fStartDate, value); }
        }
        DateTime fEndDate;
        [Persistent(@"endDate")]
        [ColumnDbDefaultValue("(NULL)")]
        public DateTime EndDate
        {
            get { return fEndDate; }
            set { SetPropertyValue<DateTime>(nameof(EndDate), ref fEndDate, value); }
        }
        byte[] fImage;
        [Size(SizeAttribute.Unlimited)]
        [Persistent(@"image")]
        [MemberDesignTimeVisibility(true)]
        public byte[] Image
        {
            get { return fImage; }
            set { SetPropertyValue<byte[]>(nameof(Image), ref fImage, value); }
        }
        bool fIsDelete;
        [Persistent(@"isDelete")]
        [ColumnDbDefaultValue("((0))")]
        public bool IsDelete
        {
            get { return fIsDelete; }
            set { SetPropertyValue<bool>(nameof(IsDelete), ref fIsDelete, value); }
        }
        [Association(@"BillReferencesEmployee")]
        public XPCollection<Bill> Bills { get { return GetCollection<Bill>(nameof(Bills)); } }
        [Association(@"ProductImportReferencesEmployee")]
        public XPCollection<ProductImport> ProductImports { get { return GetCollection<ProductImport>(nameof(ProductImports)); } }
    }

}
